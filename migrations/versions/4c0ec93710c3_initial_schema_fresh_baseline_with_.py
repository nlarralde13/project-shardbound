"""initial schema (fresh baseline with spawn coords)

Revision ID: 4c0ec93710c3
Revises: 
Create Date: 2025-09-02 15:13:50.324245

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4c0ec93710c3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('character',
    sa.Column('character_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('class_id', sa.String(length=32), nullable=True),
    sa.Column('sex', sa.String(length=16), nullable=True),
    sa.Column('age', sa.SmallInteger(), nullable=True),
    sa.Column('biography', sa.Text(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('xp', sa.BigInteger(), nullable=True),
    sa.Column('shard_id', sa.String(length=64), nullable=True),
    sa.Column('first_time_spawn', sa.JSON(), nullable=True),
    sa.Column('last_coords', sa.JSON(), nullable=True),
    sa.Column('cur_loc', sa.String(length=64), nullable=True),
    sa.Column('state', sa.JSON(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('character_id')
    )
    with op.batch_alter_table('character', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_character_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_character_user_id'), ['user_id'], unique=False)

    op.create_table('encounter_triggers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=64), nullable=False),
    sa.Column('world_x', sa.Integer(), nullable=False),
    sa.Column('world_y', sa.Integer(), nullable=False),
    sa.Column('script_id', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('items',
    sa.Column('item_id', sa.String(length=64), nullable=False),
    sa.Column('item_version', sa.String(length=16), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('rarity', sa.String(length=16), nullable=False),
    sa.Column('stack_size', sa.Integer(), nullable=False),
    sa.Column('base_stats', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_table('npcs',
    sa.Column('npc_id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('kind', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('npc_id')
    )
    op.create_table('towns',
    sa.Column('town_id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('world_x', sa.Integer(), nullable=False),
    sa.Column('world_y', sa.Integer(), nullable=False),
    sa.Column('grid_w', sa.Integer(), nullable=False),
    sa.Column('grid_h', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('town_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('handle', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('age', sa.SmallInteger(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('selected_character_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['selected_character_id'], ['character.character_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_handle'), ['handle'], unique=True)

    op.create_table('character_states',
    sa.Column('character_id', sa.String(length=64), nullable=False),
    sa.Column('mode', sa.String(length=16), nullable=False),
    sa.Column('town_id', sa.String(length=64), nullable=True),
    sa.Column('room_x', sa.Integer(), nullable=True),
    sa.Column('room_y', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['character.character_id'], ),
    sa.ForeignKeyConstraint(['town_id'], ['towns.town_id'], ),
    sa.PrimaryKeyConstraint('character_id')
    )
    op.create_table('item_instances',
    sa.Column('instance_id', sa.String(length=64), nullable=False),
    sa.Column('item_id', sa.String(length=64), nullable=False),
    sa.Column('item_version', sa.String(length=16), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('quantity >= 1', name='ck_item_instances_qty_pos'),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], ),
    sa.PrimaryKeyConstraint('instance_id')
    )
    with op.batch_alter_table('item_instances', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_item_instances_item_id'), ['item_id'], unique=False)

    op.create_table('quests',
    sa.Column('quest_id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('giver_npc_id', sa.String(length=64), nullable=True),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('target_world_x', sa.Integer(), nullable=True),
    sa.Column('target_world_y', sa.Integer(), nullable=True),
    sa.Column('required_item_id', sa.String(length=64), nullable=True),
    sa.Column('reward_json', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['giver_npc_id'], ['npcs.npc_id'], ),
    sa.PrimaryKeyConstraint('quest_id')
    )
    op.create_table('town_rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('town_id', sa.String(length=64), nullable=False),
    sa.Column('room_x', sa.Integer(), nullable=False),
    sa.Column('room_y', sa.Integer(), nullable=False),
    sa.Column('kind', sa.String(length=32), nullable=False),
    sa.Column('label', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['town_id'], ['towns.town_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('town_rooms', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_town_rooms_town_id'), ['town_id'], unique=False)

    op.create_table('character_inventory',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('character_id', sa.String(length=64), nullable=False),
    sa.Column('slot_index', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.String(length=64), nullable=True),
    sa.Column('instance_id', sa.String(length=64), nullable=True),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('equipped', sa.Boolean(), nullable=False),
    sa.Column('acquired_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('qty >= 1', name='ck_charinv_qty_pos'),
    sa.CheckConstraint('slot_index >= 0', name='ck_charinv_slot_nonneg'),
    sa.ForeignKeyConstraint(['character_id'], ['character.character_id'], ),
    sa.ForeignKeyConstraint(['instance_id'], ['item_instances.instance_id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('character_id', 'slot_index', name='uq_charinv_char_slot')
    )
    with op.batch_alter_table('character_inventory', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_character_inventory_character_id'), ['character_id'], unique=False)

    op.create_table('quest_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.String(length=64), nullable=False),
    sa.Column('quest_id', sa.String(length=64), nullable=False),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['character.character_id'], ),
    sa.ForeignKeyConstraint(['quest_id'], ['quests.quest_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('quest_states', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_quest_states_character_id'), ['character_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('quest_states', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_quest_states_character_id'))

    op.drop_table('quest_states')
    with op.batch_alter_table('character_inventory', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_character_inventory_character_id'))

    op.drop_table('character_inventory')
    with op.batch_alter_table('town_rooms', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_town_rooms_town_id'))

    op.drop_table('town_rooms')
    op.drop_table('quests')
    with op.batch_alter_table('item_instances', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_item_instances_item_id'))

    op.drop_table('item_instances')
    op.drop_table('character_states')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_handle'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('towns')
    op.drop_table('npcs')
    op.drop_table('items')
    op.drop_table('encounter_triggers')
    with op.batch_alter_table('character', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_character_user_id'))
        batch_op.drop_index(batch_op.f('ix_character_name'))

    op.drop_table('character')
    # ### end Alembic commands ###
